services:
    base:
        image: o5gc/free5gc
        profiles: ["core"]
        entrypoint: ["/mnt/free5gc/entrypoint.sh"]
        env_file: ["${ENV_FILE}"]
        labels:
            o5gc.corenetwork-function: true
            o5gc.stack: ${O5GC_STACK}
            o5gc.webui.priority: ${WEBUI_PRIO_CORE_DEFAULT}
        environment:
            GIN_MODE: release
        volumes:
            - ${DOCKER}/free5gc/:/mnt/free5gc/:ro
        privileged: true
        healthcheck:
            test: /bin/bash -c "/mnt/free5gc/healthcheck.sh"
            interval: 10s
            timeout: 5s
            retries: 5

    init:
        extends:
            service: base
        container_name: free5gc-init
        labels:
            o5gc.initialisation: true
            o5gc.webui.priority: ${WEBUI_PRIO_INIT}
        entrypoint: /mnt/free5gc/init-subscribers.sh
        networks:
            - corenet

    nrf:
        extends:
            service: base
        container_name: nrf
        hostname: nrf
        command: nrf
        networks:
            corenet:
                ipv4_address: ${NRF_IP_ADDR}

    upf:
        extends:
            service: base
        container_name: upf
        hostname: upf
        command: upf
        environment:
            - INSTALL_GTP5G_MODULE=${INSTALL_GTP5G_MODULE:-1}
        volumes:
            - /lib/modules:/lib/modules:ro
            - /usr/src:/usr/src:ro
            - ${BASE}/var/ssl:/mnt/o5gc/ssl:ro
        networks:
            corenet:
                ipv4_address: ${UPF_IP_ADDR}
            extnet:
                ipv4_address: ${UPF_EXT_IP_ADDR}

    amf:
        extends:
            service: base
        container_name: amf
        hostname: amf
        command: amf
        networks:
            corenet:
                ipv4_address: ${AMF_IP_ADDR}

    ausf:
        extends:
            service: base
        container_name: ausf
        hostname: ausf
        command: ausf
        networks:
            corenet:
                ipv4_address: ${AUSF_IP_ADDR}

    nssf:
        extends:
            service: base
        container_name: nssf
        hostname: nssf
        command: nssf
        networks:
            corenet:
                ipv4_address: ${NSSF_IP_ADDR}

    pcf:
        extends:
            service: base
        container_name: pcf
        hostname: pcf
        command: pcf
        networks:
            corenet:
                ipv4_address: ${PCF_IP_ADDR}

    smf:
        extends:
            service: base
        container_name: smf
        hostname: smf
        command: smf
        networks:
            corenet:
                ipv4_address: ${SMF_IP_ADDR}

    udm:
        extends:
            service: base
        container_name: udm
        hostname: udm
        command: udm
        networks:
            corenet:
                ipv4_address: ${UDM_IP_ADDR}

    udr:
        extends:
            service: base
        container_name: udr
        hostname: udr
        command: udr
        networks:
            corenet:
                ipv4_address: ${UDR_IP_ADDR}


    webui:
        extends:
            service: base
        container_name: free5gc-webui
        hostname: free5gc-webui
        command: webui
        labels:
            o5gc.link.title: "free5GC WebUI"
            o5gc.link.url: "http://{{host}}:${FREE5GC_WEBUI_HOST_PORT}/"
            o5gc.webui.priority: 0
        environment:
            - DB_URI=mongodb://${MONGO_IP_ADDR}/open5gs
        networks:
            corenet:
                ipv4_address: ${FREE5GC_WEBUI_IP_ADDR}
            o5gc:
        ports:
            - ${FREE5GC_WEBUI_HOST_PORT}:5000
